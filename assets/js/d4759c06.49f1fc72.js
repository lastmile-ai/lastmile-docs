"use strict";(self.webpackChunklastmile_docs=self.webpackChunklastmile_docs||[]).push([[8501],{27685:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>v,contentTitle:()=>b,default:()=>_,frontMatter:()=>y,metadata:()=>N,toc:()=>q});var a=i(74848),n=i(28453),t=i(91366),r=i.n(t),l=(i(6050),i(57742)),m=i.n(l),c=(i(67792),i(27362)),d=i.n(c),o=(i(36683),i(81124)),p=i.n(o),h=i(60674),u=i.n(h),j=i(23397),x=i.n(j),f=i(51107),g=(i(77675),i(19365));const y={id:"list-fine-tune-jobs",title:"List Fine Tune Jobs",description:"List all fine-tune jobs with optional filters.",sidebar_label:"List Fine Tune Jobs",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"api/lastmile-ai-api-v-2",custom_edit_url:null},b=void 0,N={id:"api/list-fine-tune-jobs",title:"List Fine Tune Jobs",description:"List all fine-tune jobs with optional filters.",source:"@site/docs/api/list-fine-tune-jobs.api.mdx",sourceDirName:"api",slug:"/api/list-fine-tune-jobs",permalink:"/api/list-fine-tune-jobs",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-fine-tune-jobs",title:"List Fine Tune Jobs",description:"List all fine-tune jobs with optional filters.",sidebar_label:"List Fine Tune Jobs",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"api/lastmile-ai-api-v-2",custom_edit_url:null},sidebar:"sidebar",previous:{title:"Get Fine Tune Job Status",permalink:"/api/get-fine-tune-job-status"},next:{title:"List Base Models",permalink:"/api/list-base-models"}},v={},q=[];function M(e){const s={p:"p",...(0,n.R)(),...e.components},{Details:i}=s;return i||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Fine Tune Jobs"}),"\n",(0,a.jsx)(m(),{method:"post",path:"/api/2/auto_eval/fine_tune_job/list",context:"endpoint"}),"\n",(0,a.jsx)(s.p,{children:"List all fine-tune jobs with optional filters."}),"\n",(0,a.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(d(),{className:"openapi-tabs__mime",children:(0,a.jsx)(g.default,{label:"application/json",value:"application/json-schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,a.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,a.jsx)(s.p,{children:"Body"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"filters"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)(u(),{collapsible:!1,name:"query",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"search query substring match for name and description"}}),(0,a.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})]})]})})})]})})}),"\n",(0,a.jsx)("div",{children:(0,a.jsx)("div",{children:(0,a.jsx)(r(),{label:void 0,id:void 0,children:(0,a.jsxs)(g.default,{label:"200",value:"200",children:[(0,a.jsx)("div",{children:(0,a.jsx)(s.p,{children:"Successful operation"})}),(0,a.jsx)("div",{children:(0,a.jsx)(d(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,a.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,a.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,a.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,a.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,a.jsx)("strong",{children:(0,a.jsx)(s.p,{children:"Schema"})})}),(0,a.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"jobs"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object[]"})}),(0,a.jsx)("span",{className:"openapi-schema__divider"}),(0,a.jsx)("span",{className:"openapi-schema__required",children:(0,a.jsx)(s.p,{children:"required"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Array ["})})}),(0,a.jsx)(u(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ID of the fine tune job."}}),(0,a.jsx)(u(),{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time"}}),(0,a.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time"}}),(0,a.jsx)(u(),{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Name corresponding to the fine tuned model derived from this job"}}),(0,a.jsx)(u(),{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"config"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object"})}),(0,a.jsx)("span",{className:"openapi-schema__divider"}),(0,a.jsx)("span",{className:"openapi-schema__required",children:(0,a.jsx)(s.p,{children:"required"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Set of columns to be used in fine-tuning.\nSupported columns: input, output, ground_truth\nFor example, a task similar to summarization might need output and\nground_truth."})}),(0,a.jsx)(u(),{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional name for the job."}}),(0,a.jsx)(u(),{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional description for the job."}}),(0,a.jsx)(u(),{collapsible:!1,name:"baselineModelId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ID for the model used as the starting point for training."}}),(0,a.jsx)(u(),{collapsible:!1,name:"trainDatasetId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The dataset to use for training, with splits baked in or to be\n derived dynamically"}}),(0,a.jsx)(u(),{collapsible:!1,name:"testDatasetId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The dataset to use for an unbiased evaluation of the model"}}),(0,a.jsx)(u(),{collapsible:!1,name:"selectedColumns",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string"},description:"Set of columns to be used in fine-tuning.\n Supported columns: input, output, ground_truth\n For example, a task similar to summarization might need output and\n ground_truth."}})]})]})}),(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"result"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object"})}),(0,a.jsx)("span",{className:"openapi-schema__divider"}),(0,a.jsx)("span",{className:"openapi-schema__required",children:(0,a.jsx)(s.p,{children:"required"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Sequential snapshots of training metrics."})}),(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"progress"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object[]"})}),(0,a.jsx)("span",{className:"openapi-schema__divider"}),(0,a.jsx)("span",{className:"openapi-schema__required",children:(0,a.jsx)(s.p,{children:"required"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Sequential snapshots of training metrics."})}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Array ["})})}),(0,a.jsx)(u(),{collapsible:!1,name:"jobId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!1,name:"epoch",required:!0,schemaName:"integer",qualifierMessage:"**Possible values:** `>= -2147483648` and `<= 2147483647`",schema:{type:"integer",minimum:-2147483648,maximum:2147483647}}),(0,a.jsx)(u(),{collapsible:!1,name:"loss",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number"}}),(0,a.jsx)(u(),{collapsible:!1,name:"accuracy",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number"}}),(0,a.jsx)(u(),{collapsible:!1,name:"progress",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number"}}),(0,a.jsx)(u(),{collapsible:!1,name:"timestamp",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time"}}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,a.jsx)(s.p,{children:"]"})})})]})]})}),(0,a.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,a.jsxs)(i,{style:{},className:"openapi-markdown__details",children:[(0,a.jsx)("summary",{style:{},children:(0,a.jsxs)("span",{className:"openapi-schema__container",children:[(0,a.jsx)("strong",{className:"openapi-schema__property",children:(0,a.jsx)(s.p,{children:"trainedModelFile"})}),(0,a.jsx)("span",{className:"openapi-schema__name",children:(0,a.jsx)(s.p,{children:"object"})})]})}),(0,a.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,a.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,a.jsx)(s.p,{children:"Actual file asset corresponding to a model"})}),(0,a.jsx)(u(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time"}}),(0,a.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time"}}),(0,a.jsx)(u(),{collapsible:!1,name:"modelId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!1,name:"contentMd5Hash",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,a.jsx)(u(),{collapsible:!1,name:"fileSizeBytes",required:!0,schemaName:"integer",qualifierMessage:"**Possible values:** `>= -9223372036854776000` and `<= 9223372036854776000`",schema:{type:"integer",minimum:-0x8000000000000000,maximum:0x8000000000000000}})]})]})}),(0,a.jsx)(u(),{collapsible:!1,name:"resultUrl",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Url to view the full results and progress (e.g. external W&B url)"}})]})]})}),(0,a.jsx)("li",{children:(0,a.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,a.jsx)(s.p,{children:"]"})})})]})]})}),(0,a.jsx)(u(),{collapsible:!1,name:"totalCount",required:!0,schemaName:"integer",qualifierMessage:"**Possible values:** `>= -9223372036854776000` and `<= 9223372036854776000`",schema:{type:"integer",minimum:-0x8000000000000000,maximum:0x8000000000000000,description:"Total count of fine tune jobs which can be listed with applicable\n filters, regardless of page size"}})]})]})}),(0,a.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,a.jsx)(p(),{responseExample:'{\n  "jobs": [\n    {\n      "id": "string",\n      "createdAt": "2024-07-29T15:51:28.071Z",\n      "updatedAt": "2024-07-29T15:51:28.071Z",\n      "name": "string",\n      "description": "string",\n      "status": "string",\n      "config": {\n        "name": "string",\n        "description": "string",\n        "baselineModelId": "string",\n        "trainDatasetId": "string",\n        "testDatasetId": "string",\n        "selectedColumns": [\n          "string"\n        ]\n      },\n      "result": {\n        "progress": [\n          {\n            "jobId": "string",\n            "epoch": 0,\n            "loss": 0,\n            "accuracy": 0,\n            "progress": 0,\n            "timestamp": "2024-07-29T15:51:28.071Z"\n          }\n        ],\n        "trainedModelFile": {\n          "id": "string",\n          "createdAt": "2024-07-29T15:51:28.071Z",\n          "updatedAt": "2024-07-29T15:51:28.071Z",\n          "modelId": "string",\n          "contentMd5Hash": "string",\n          "fileSizeBytes": 0\n        },\n        "resultUrl": "string"\n      }\n    }\n  ],\n  "totalCount": 0\n}',language:"json"})})]})})})})]})})})})]})}function _(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(M,{...e})}):M(e)}}}]);