"use strict";(self.webpackChunklastmile_docs=self.webpackChunklastmile_docs||[]).push([[4864],{8147:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>y,contentTitle:()=>v,default:()=>k,frontMatter:()=>f,metadata:()=>N,toc:()=>T});var i=a(74848),t=a(28453),n=a(91366),l=a.n(n),r=(a(6050),a(57742)),o=a.n(r),c=(a(67792),a(27362)),m=a.n(c),d=(a(36683),a(81124)),p=a.n(d),u=a(60674),h=a.n(u),x=a(23397),b=a.n(x),j=a(51107),g=(a(77675),a(19365));const f={id:"get-pseudo-label-job-status",title:"Get Pseudo Label Job Status",description:"Get the status of an existing job, including any results.",sidebar_label:"Get Pseudo Label Job Status",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"api/lastmile-ai-api-v-2",custom_edit_url:null},v=void 0,N={id:"api/get-pseudo-label-job-status",title:"Get Pseudo Label Job Status",description:"Get the status of an existing job, including any results.",source:"@site/docs/api/get-pseudo-label-job-status.api.mdx",sourceDirName:"api",slug:"/api/get-pseudo-label-job-status",permalink:"/api/get-pseudo-label-job-status",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-pseudo-label-job-status",title:"Get Pseudo Label Job Status",description:"Get the status of an existing job, including any results.",sidebar_label:"Get Pseudo Label Job Status",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"api/lastmile-ai-api-v-2",custom_edit_url:null},sidebar:"sidebar",previous:{title:"Submit Pseudo Label Job",permalink:"/api/submit-pseudo-label-job"},next:{title:"VPC Deployment",permalink:"/deployment"}},y={},T=[];function M(e){const s={p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Get Pseudo Label Job Status"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/api/2/auto_eval/pseudo_label_job/get_status",context:"endpoint"}),"\n",(0,i.jsx)(s.p,{children:"Get the status of an existing job, including any results."}),"\n",(0,i.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(m(),{className:"openapi-tabs__mime",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(h(),{collapsible:!1,name:"jobId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsx)(l(),{label:void 0,id:void 0,children:(0,i.jsxs)(g.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Successful operation"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(b(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(h(),{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(h(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"pseudoLabelJobResult"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"TODO: @Ankush Add support for different label types (e.g., Binary Single\nLabel, Multi Label) Currently, only Binary Single Label is supported."})}),(0,i.jsx)(h(),{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional name for the job."}}),(0,i.jsx)(h(),{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional description for the job."}}),(0,i.jsx)(h(),{collapsible:!1,name:"datasetId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the main dataset to be pseudo-labeled"}}),(0,i.jsx)(h(),{collapsible:!1,name:"fewShotDatasetId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the dataset containing few-shot examples. Optional."}}),(0,i.jsx)(h(),{collapsible:!1,name:"activeLabeledDatasetId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the actively labeled dataset. Optional. If null, this job is for\n active learning."}}),(0,i.jsx)(h(),{collapsible:!1,name:"selectedColumns",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",description:"Subset of columns to be used in pseudo-labeling.\n Expected columns: input, output, ground_truth\n For example, a summarization task might not need an input column.\n TODO: Should this be repeated EvaluationMetricParameter enum?"}}}),(0,i.jsx)(h(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"chatCompletionConfig"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"For Chat LLM based labeling, the configuration to use with the requests\n(messages omitted)"})}),(0,i.jsx)(h(),{collapsible:!1,name:"vendor",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(h(),{collapsible:!1,name:"model",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ID of the model to use for the completion."}}),(0,i.jsx)(h(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"messages"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(h(),{collapsible:!1,name:"role",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Role can be 'system', 'user', or 'assistant'."}}),(0,i.jsx)(h(),{collapsible:!1,name:"content",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The content of the message."}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(h(),{collapsible:!1,name:"maxTokens",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",description:"The maximum number of tokens to generate."}}),(0,i.jsx)(h(),{collapsible:!1,name:"temperature",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"The temperature to use for the completion."}}),(0,i.jsx)(h(),{collapsible:!1,name:"topP",required:!0,schemaName:"number",qualifierMessage:void 0,schema:{type:"number",description:"The top_p value to use for the completion."}})]})]})}),(0,i.jsx)(h(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"promptTemplate"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(h(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(h(),{collapsible:!1,name:"template",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The template string that defines the prompt"}})]})]})}),(0,i.jsx)(h(),{collapsible:!1,name:"baseEvaluationMetric",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'TODO: @Ankush flesh out default prompt templates or "Base Metric"\n representation of prompt lmai.proto.model_fine_tuning.v1.templates.'}}),(0,i.jsx)(h(),{collapsible:!1,name:"skipActiveLabeling",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"If true, skip active labeling, which involves an intermediate Dataset\n created for human labeling."}})]})]})})]})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "status": "string",\n  "pseudoLabelJobResult": {\n    "name": "string",\n    "description": "string",\n    "datasetId": "string",\n    "fewShotDatasetId": "string",\n    "activeLabeledDatasetId": "string",\n    "selectedColumns": [\n      "string"\n    ],\n    "chatCompletionConfig": {\n      "vendor": "string",\n      "model": "string",\n      "messages": [\n        {\n          "role": "string",\n          "content": "string"\n        }\n      ],\n      "maxTokens": 0,\n      "temperature": 0,\n      "topP": 0\n    },\n    "promptTemplate": {\n      "id": "string",\n      "template": "string"\n    },\n    "baseEvaluationMetric": "string",\n    "skipActiveLabeling": true\n  }\n}',language:"json"})})]})})})})]})})})})]})}function k(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(M,{...e})}):M(e)}}}]);