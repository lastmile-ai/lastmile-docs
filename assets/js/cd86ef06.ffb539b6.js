"use strict";(self.webpackChunklastmile_docs=self.webpackChunklastmile_docs||[]).push([[3140],{85446:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>m,toc:()=>T});var i=a(74848),s=a(28453),n=(a(6050),a(60674)),r=a.n(n),_=(a(23397),a(51107));a(19365);const l={id:"datasetcolumninfo",title:"DatasetColumnInfo",description:"",sidebar_label:"DatasetColumnInfo",hide_title:!0,schema:!0,custom_edit_url:null},o=void 0,m={id:"api/schemas/datasetcolumninfo",title:"DatasetColumnInfo",description:"",source:"@site/docs/api/schemas/datasetcolumninfo.schema.mdx",sourceDirName:"api/schemas",slug:"/api/schemas/datasetcolumninfo",permalink:"/api/schemas/datasetcolumninfo",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"datasetcolumninfo",title:"DatasetColumnInfo",description:"",sidebar_label:"DatasetColumnInfo",hide_title:!0,schema:!0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"Timestamp",permalink:"/api/schemas/timestamp"},next:{title:"DatasetLabelState",permalink:"/api/schemas/datasetlabelstate"}},d={},T=[];function c(e){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(_.default,{as:"h1",className:"openapi__heading",children:"DatasetColumnInfo"}),"\n",(0,i.jsxs)("ul",{children:[(0,i.jsx)(r(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The ID of the dataset file."}}),(0,i.jsx)(r(),{collapsible:!1,name:"createdAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"A summary is retrieved for a time range from start_time to end_time\n If no end_time is provided, current time is used"}}),(0,i.jsx)(r(),{collapsible:!1,name:"updatedAt",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{type:"string",format:"date-time",description:"A summary is retrieved for a time range from start_time to end_time\n If no end_time is provided, current time is used"}}),(0,i.jsx)(r(),{collapsible:!1,name:"index",required:!0,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer",description:"Index of the column within the dataset file."}}),(0,i.jsx)(r(),{collapsible:!1,name:"literalName",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The literal name for the column."}}),(0,i.jsx)(r(),{collapsible:!1,name:"dtype",required:!1,schemaName:"DatasetColumnDType (string)",qualifierMessage:"**Possible values:** [`DATASET_COLUMN_D_TYPE_UNSPECIFIED`, `DATASET_COLUMN_D_TYPE_INT32`, `DATASET_COLUMN_D_TYPE_INT64`, `DATASET_COLUMN_D_TYPE_FLOAT32`, `DATASET_COLUMN_D_TYPE_FLOAT64`, `DATASET_COLUMN_D_TYPE_STRING`, `DATASET_COLUMN_D_TYPE_BYTES`, `DATASET_COLUMN_D_TYPE_ANY`, `DATASET_COLUMN_D_TYPE_LIST_OF_STRINGS`, `DATASET_COLUMN_D_TYPE_BOOLEAN`]",schema:{type:"string",enum:["DATASET_COLUMN_D_TYPE_UNSPECIFIED","DATASET_COLUMN_D_TYPE_INT32","DATASET_COLUMN_D_TYPE_INT64","DATASET_COLUMN_D_TYPE_FLOAT32","DATASET_COLUMN_D_TYPE_FLOAT64","DATASET_COLUMN_D_TYPE_STRING","DATASET_COLUMN_D_TYPE_BYTES","DATASET_COLUMN_D_TYPE_ANY","DATASET_COLUMN_D_TYPE_LIST_OF_STRINGS","DATASET_COLUMN_D_TYPE_BOOLEAN"],title:"DatasetColumnDType",description:"Datatypes for a column in a dataset file. We likely don't need everything\n here, but it's good to be explicit, for example to avoid unknowingly coercing\n int64 values into int32. Encoding for text is UTF_8 unless indicated\n otherwise."}})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c()}}}]);