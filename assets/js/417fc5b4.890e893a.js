"use strict";(self.webpackChunklastmile_docs=self.webpackChunklastmile_docs||[]).push([[7743],{26497:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var i=a(74848),t=a(28453),n=(a(6050),a(60674)),o=a.n(n),l=(a(23397),a(51107));a(19365);const r={id:"pseudolabeljobconfig",title:"PseudoLabelJobConfig",description:"Configuration for LLM Judge labeling job.",sidebar_label:"PseudoLabelJobConfig",hide_title:!0,schema:!0,custom_edit_url:null},c=void 0,d={id:"api/schemas/pseudolabeljobconfig",title:"PseudoLabelJobConfig",description:"Configuration for LLM Judge labeling job.",source:"@site/docs/api/schemas/pseudolabeljobconfig.schema.mdx",sourceDirName:"api/schemas",slug:"/api/schemas/pseudolabeljobconfig",permalink:"/api/schemas/pseudolabeljobconfig",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"pseudolabeljobconfig",title:"PseudoLabelJobConfig",description:"Configuration for LLM Judge labeling job.",sidebar_label:"PseudoLabelJobConfig",hide_title:!0,schema:!0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"CreatePseudoLabelJobRequest",permalink:"/api/schemas/createpseudolabeljobrequest"},next:{title:"PromptTemplate",permalink:"/api/schemas/prompttemplate"}},p={},m=[];function u(e){const s={p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.default,{as:"h1",className:"openapi__heading",children:"PseudoLabelJobConfig"}),"\n",(0,i.jsx)(s.p,{children:"Configuration for LLM Judge labeling job."}),"\n",(0,i.jsxs)("ul",{children:[(0,i.jsx)(o(),{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional name for the job."}}),(0,i.jsx)(o(),{collapsible:!1,name:"description",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Optional description for the job."}}),(0,i.jsx)(o(),{collapsible:!1,name:"datasetId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the main dataset to be pseudo-labeled"}}),(0,i.jsx)(o(),{collapsible:!1,name:"fewShotDatasetId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the dataset containing few-shot examples. Optional."}}),(0,i.jsx)(o(),{collapsible:!1,name:"activeLabeledDatasetId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"ID of the actively labeled dataset. Optional. If null, this job is for\n active learning."}}),(0,i.jsx)(o(),{collapsible:!1,name:"selectedColumns",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string",description:"Subset of columns to be used in pseudo-labeling.\n Expected columns: input, output, ground_truth\n For example, a summarization task might not need an input column.\n By default, all columns are used."}}}),(0,i.jsx)(o(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"promptTemplate"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(o(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(o(),{collapsible:!1,name:"template",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"The template string that defines the prompt"}})]})]})}),(0,i.jsx)(o(),{collapsible:!1,name:"baseEvaluationMetric",required:!0,schemaName:"BaseEvaluationMetric (string)",qualifierMessage:"**Possible values:** [`BASE_EVALUATION_METRIC_UNSPECIFIED`, `BASE_EVALUATION_METRIC_FAITHFULNESS`, `BASE_EVALUATION_METRIC_RELEVANCE`, `BASE_EVALUATION_METRIC_TOXICITY`, `BASE_EVALUATION_METRIC_QA`, `BASE_EVALUATION_METRIC_SUMMARIZATION`]",schema:{type:"string",enum:["BASE_EVALUATION_METRIC_UNSPECIFIED","BASE_EVALUATION_METRIC_FAITHFULNESS","BASE_EVALUATION_METRIC_RELEVANCE","BASE_EVALUATION_METRIC_TOXICITY","BASE_EVALUATION_METRIC_QA","BASE_EVALUATION_METRIC_SUMMARIZATION"],title:"BaseEvaluationMetric",description:"Reserved field. Do not use  at the moment."}}),(0,i.jsx)(o(),{collapsible:!1,name:"skipActiveLabeling",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",description:"If true, skip active labeling, which involves an intermediate Dataset\n created for human labeling."}})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);