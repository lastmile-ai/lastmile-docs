"use strict";(self.webpackChunklastmile_docs=self.webpackChunklastmile_docs||[]).push([[6409],{80122:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>T,frontMatter:()=>A,metadata:()=>c,toc:()=>n});var E=a(74848),i=a(28453),t=(a(6050),a(60674)),r=a.n(t),_=(a(23397),a(51107));a(19365);const A={id:"metricbasemodel",title:"MetricBaseModel",description:"Information about a base model corresponding to a metric",sidebar_label:"MetricBaseModel",hide_title:!0,schema:!0,custom_edit_url:null},l=void 0,c={id:"api/schemas/metricbasemodel",title:"MetricBaseModel",description:"Information about a base model corresponding to a metric",source:"@site/docs/api/schemas/metricbasemodel.schema.mdx",sourceDirName:"api/schemas",slug:"/api/schemas/metricbasemodel",permalink:"/api/schemas/metricbasemodel",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"metricbasemodel",title:"MetricBaseModel",description:"Information about a base model corresponding to a metric",sidebar_label:"MetricBaseModel",hide_title:!0,schema:!0,custom_edit_url:null},sidebar:"sidebar",previous:{title:"Model",permalink:"/api/schemas/model"},next:{title:"ModelCard",permalink:"/api/schemas/modelcard"}},o={},n=[];function m(e){const s={p:"p",...(0,i.R)(),...e.components};return(0,E.jsxs)(E.Fragment,{children:[(0,E.jsx)(_.default,{as:"h1",className:"openapi__heading",children:"MetricBaseModel"}),"\n",(0,E.jsx)(s.p,{children:"Information about a base model corresponding to a metric"}),"\n",(0,E.jsxs)("ul",{children:[(0,E.jsx)(r(),{collapsible:!1,name:"id",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,E.jsx)(r(),{collapsible:!1,name:"modelId",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,E.jsx)(r(),{collapsible:!1,name:"baseModelArchitecture",required:!0,schemaName:"BaseModelArchitecture (string)",qualifierMessage:"**Possible values:** [`BASE_MODEL_ARCHITECTURE_UNSPECIFIED`, `BASE_MODEL_ARCHITECTURE_ALBERTA_XS`, `BASE_MODEL_ARCHITECTURE_ALBERTA_LC`, `BASE_MODEL_ARCHITECTURE_DEBERTA_V3`, `BASE_MODEL_ARCHITECTURE_ST_SIMILARITY`, `BASE_MODEL_ARCHITECTURE_MODERNBERT_BASE`, `BASE_MODEL_ARCHITECTURE_MODERNBERT_LARGE`]",schema:{type:"string",enum:["BASE_MODEL_ARCHITECTURE_UNSPECIFIED","BASE_MODEL_ARCHITECTURE_ALBERTA_XS","BASE_MODEL_ARCHITECTURE_ALBERTA_LC","BASE_MODEL_ARCHITECTURE_DEBERTA_V3","BASE_MODEL_ARCHITECTURE_ST_SIMILARITY","BASE_MODEL_ARCHITECTURE_MODERNBERT_BASE","BASE_MODEL_ARCHITECTURE_MODERNBERT_LARGE"],title:"BaseModelArchitecture",description:"Keep in sync with www/prisma/schema.prisma:AEBaseModelArchitecture"}}),(0,E.jsx)(r(),{collapsible:!1,name:"baseEvaluationMetric",required:!1,schemaName:"BaseEvaluationMetric (string)",qualifierMessage:"**Possible values:** [`BASE_EVALUATION_METRIC_UNSPECIFIED`, `BASE_EVALUATION_METRIC_FAITHFULNESS`, `BASE_EVALUATION_METRIC_RELEVANCE`, `BASE_EVALUATION_METRIC_TOXICITY`, `BASE_EVALUATION_METRIC_QA`, `BASE_EVALUATION_METRIC_SUMMARIZATION`]",schema:{type:"string",enum:["BASE_EVALUATION_METRIC_UNSPECIFIED","BASE_EVALUATION_METRIC_FAITHFULNESS","BASE_EVALUATION_METRIC_RELEVANCE","BASE_EVALUATION_METRIC_TOXICITY","BASE_EVALUATION_METRIC_QA","BASE_EVALUATION_METRIC_SUMMARIZATION"],title:"BaseEvaluationMetric",description:"Keep in sync with www/prisma/schema.prisma:AEBaseEvaluationMetric"}})]})]})}function T(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,E.jsx)(s,{...e,children:(0,E.jsx)(m,{...e})}):m(e)}}}]);