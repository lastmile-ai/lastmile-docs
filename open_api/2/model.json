{
  "openapi": "3.0.3",
  "info": {
    "title": "LastMile AI API V2",
    "description": "LastMile AI API V2: Components",
    "version": "2.0"
  },
  "options": {
    "servers": [
      {
        "url": "https://lastmileai.dev2",
        "description": "REST API surface for the LastMile platform."
      }
    ]
  },
  "servers": [
    {
      "url": "https://your-custom-url.com"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/2/auto_eval/dataset/create": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Create Dataset",
        "operationId": "CreateDataset",
        "description": "Create a new Dataset. Use UploadDatasetFile to upload files to the dataset.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreateDatasetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreateDatasetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/upload_file": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Upload Dataset File",
        "operationId": "UploadDatasetFile",
        "description": "Initiate a file upload to a Dataset. Call FinalizeSingleDatasetFileUpload\n to complete the upload with the presigned URL returned from this call.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.UploadDatasetFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.UploadDatasetFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/finalize_single_file_upload": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Finalize Single Dataset File Upload",
        "operationId": "FinalizeSingleDatasetFileUpload",
        "description": "Finalize a Dataset file upload. This call should be made after the file has\n been uploaded to the S3 URL returned from UploadDatasetFile.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.FinalizeSingleDatasetFileUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.FinalizeSingleDatasetFileUploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/get": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Get Dataset",
        "operationId": "GetDataset",
        "description": "Get a Dataset.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/get_download_url": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Get Dataset Download URL",
        "operationId": "GetDatasetDownloadURL",
        "description": "Get a download url for a Dataset.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetDownloadURLRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetDownloadURLResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/get_view": {
      "post": {
        "tags": ["Dataset"],
        "summary": "Get Dataset View",
        "operationId": "GetDatasetView",
        "description": "Get a paginated view of the data within a Dataset.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetViewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetDatasetViewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/dataset/list": {
      "post": {
        "tags": ["Dataset"],
        "summary": "List Datasets",
        "operationId": "ListDatasets",
        "description": "List Datasets.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListDatasetsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListDatasetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/evaluation/evaluate": {
      "post": {
        "tags": ["Evaluation"],
        "summary": "Evaluate",
        "operationId": "Evaluate",
        "description": "Evaluate a metric on rows of data, returning scores for each row. Specify\n metric.id or metric.name to identify the metric.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.EvaluateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.EvaluateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/evaluation/evaluate_dataset": {
      "post": {
        "tags": ["Evaluation"],
        "summary": "Evaluate Dataset",
        "operationId": "EvaluateDataset",
        "description": "Evaluate a metric on a dataset, returning scores for each example. Specify\n metric.id or metric.name to identify the metric.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.EvaluateDatasetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.EvaluateDatasetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/evaluation/list_metrics": {
      "post": {
        "tags": ["Evaluation"],
        "summary": "List Metrics",
        "operationId": "ListMetrics",
        "description": "List all available evaluation metrics.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListMetricsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListMetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/evaluation/get_metric": {
      "post": {
        "tags": ["Evaluation"],
        "summary": "Get Metric",
        "operationId": "GetMetric",
        "description": "Get a specific evaluation metric by id or name.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetMetricRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetMetricResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/fine_tune_job/create": {
      "post": {
        "tags": ["Fine Tune Job"],
        "summary": "Create Fine Tune Job",
        "operationId": "CreateFineTuneJob",
        "description": "Step 1 of 2: Create a new job configuration for fine-tuning, to be\n subsequently submitted by calling SubmitFineTuneJob.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreateFineTuneJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreateFineTuneJobResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/fine_tune_job/submit": {
      "post": {
        "tags": ["Fine Tune Job"],
        "summary": "Submit Fine Tune Job",
        "operationId": "SubmitFineTuneJob",
        "description": "Step 2 of 2: Submit the job configuration created by CreateFineTuneJob to\n initiate a job.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.SubmitFineTuneJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.SubmitFineTuneJobResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/fine_tune_job/get_status": {
      "post": {
        "tags": ["Fine Tune Job"],
        "summary": "Get Fine Tune Job Status",
        "operationId": "GetFineTuneJobStatus",
        "description": "Get the status of an existing job, including any results.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetFineTuneJobStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetFineTuneJobStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/fine_tune_job/list": {
      "post": {
        "tags": ["Fine Tune Job"],
        "summary": "List Fine Tune Jobs",
        "operationId": "ListFineTuneJobs",
        "description": "List all fine-tune jobs with optional filters.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListFineTuneJobsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListFineTuneJobsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/fine_tune_job/list_base_models": {
      "post": {
        "tags": ["Fine Tune Job"],
        "summary": "List Base Models",
        "operationId": "ListBaseModels",
        "description": "List all base models available for fine-tuning.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListBaseModelsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListBaseModelsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/pseudo_label_job/create": {
      "post": {
        "tags": ["Pseudo Label Job"],
        "summary": "Create Pseudo Label Job",
        "operationId": "CreatePseudoLabelJob",
        "description": "Step 1 of 2: Create a new job configuration for LLM Judge labeling, to be\n subsequently submitted by calling SubmitPseudoLabelJob.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreatePseudoLabelJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.CreatePseudoLabelJobResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/pseudo_label_job/submit": {
      "post": {
        "tags": ["Pseudo Label Job"],
        "summary": "Submit Pseudo Label Job",
        "operationId": "SubmitPseudoLabelJob",
        "description": "Step 2 of 2: Submit the job configuration created by CreatePseudoLabelJob\n to initiate an LLM Judge labeling job.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.SubmitPseudoLabelJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.SubmitPseudoLabelJobResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/2/auto_eval/pseudo_label_job/get_status": {
      "post": {
        "tags": ["Pseudo Label Job"],
        "summary": "Get Pseudo Label Job Status",
        "operationId": "GetPseudoLabelJobStatus",
        "description": "Get the status of an existing job, including any results.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetPseudoLabelJobStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lmai.proto.webserver.v2.GetPseudoLabelJobStatusResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "lmai.proto.model_fine_tuning.v1.ModelDeployment": {
        "title": "ModelDeployment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modelId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "deployedApiUrl": {
            "type": "string"
          },
          "jobId": {
            "type": "string",
            "description": "The ID of the job coordinating the deployment, if one exists."
          }
        },
        "required": ["id", "createdAt", "updatedAt", "modelId", "status"]
      },
      "lmai.proto.model_fine_tuning.v1.MetricBaseModel": {
        "title": "MetricBaseModel",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "modelId": {
            "type": "string"
          },
          "baseModelArchitecture": {
            "type": "string"
          },
          "baseEvaluationMetric": {
            "type": "string"
          }
        },
        "required": ["id", "modelId", "baseModelArchitecture"],
        "description": "Information about a base model corresponding to a metric"
      },
      "lmai.proto.model_fine_tuning.v1.ModelCard": {
        "title": "ModelCard",
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deploymentStatus": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modelSize": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "purpose": {
            "type": "string"
          },
          "trainingProgress": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.TrainingProgress"
          },
          "baseModelArchitecture": {
            "type": "string"
          },
          "baseEvaluationMetric": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.ModelCard.ValuesEntry"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "modelId",
          "name",
          "description",
          "deploymentStatus",
          "createdAt",
          "updatedAt",
          "modelSize",
          "purpose",
          "trainingProgress",
          "baseModelArchitecture",
          "values",
          "tags",
          "columns"
        ]
      },
      "lmai.proto.model_fine_tuning.v1.ModelCard.ValuesEntry": {
        "title": "ValuesEntry",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["key", "value"]
      },
      "lmai.proto.model_fine_tuning.v1.Model": {
        "title": "Model",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string"
          },
          "metricBaseModel": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.MetricBaseModel"
          },
          "modelCard": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.ModelCard"
          }
        },
        "required": ["id", "createdAt", "updatedAt", "metricBaseModel"],
        "description": "Definition for the model"
      },
      "lmai.proto.model_fine_tuning.v1.ModelFile": {
        "title": "ModelFile",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "modelId": {
            "type": "string"
          },
          "contentMd5Hash": {
            "type": "string"
          },
          "fileSizeBytes": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "modelId",
          "contentMd5Hash",
          "fileSizeBytes"
        ],
        "description": "Actual file asset corresponding to a model"
      },
      "lmai.proto.model_fine_tuning.v1.TrainingProgress": {
        "title": "TrainingProgress",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "epoch": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "loss": {
            "type": "number"
          },
          "accuracy": {
            "type": "number"
          },
          "progress": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "jobId",
          "epoch",
          "loss",
          "accuracy",
          "progress",
          "timestamp"
        ],
        "description": "Progress metrics from model training."
      },
      "lmai.proto.model_fine_tuning.v1.User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": ["id"],
        "description": "Basic user. TODO: Merge with other notions of a user."
      },
      "lmai.proto.model_fine_tuning.v1.Organization": {
        "title": "Organization",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": ["id"],
        "description": "Organization - collection of Users with shared assets. We do not prescribe\n here any semantics about whether a user can be in more than one organization,\n or any other relationships."
      },
      "lmai.proto.model_fine_tuning.v1.Role": {
        "title": "Role",
        "type": "object",
        "properties": {
          "basic": {
            "type": "boolean",
            "description": "\"Basic\" permissions."
          },
          "editor": {
            "type": "boolean",
            "description": "\"Editor\" permissions."
          },
          "owner": {
            "type": "boolean",
            "description": "\"Owner\" permissions."
          }
        },
        "required": ["basic", "editor", "owner"],
        "description": "A role for a principal (likely a user) within an organization. Mostly used\n for Authorization. Anticipating the need for more roles here, we space out\n the values to leave unused numbers so that we can add more later while\n preserving the natural ordering of permissions. We don't prescribe specific\n authorizations here despite the suggestive names."
      },
      "lmai.proto.model_fine_tuning.v1.OrganizationRole": {
        "title": "OrganizationRole",
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Role"
          }
        },
        "required": ["organizationId", "role"],
        "description": "A role specified in the context of a particular organization. Can be used as\n its own Principal as a convenient way to define groups of permissions."
      },
      "lmai.proto.model_fine_tuning.v1.Principal": {
        "title": "Principal",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "organizationRole": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.OrganizationRole"
          }
        },
        "required": ["userId", "organizationId", "organizationRole"],
        "description": "A Principal is an entity in an authorization context, such as a user\n requesting read access to a resource or an organization who owns it."
      },
      "lmai.proto.model_fine_tuning.v1.Subject": {
        "title": "Subject",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "A dataset which a principal may or may not have access to."
          },
          "modelId": {
            "type": "string",
            "description": "A model _definition_ which a principal may or may not have access to."
          },
          "modelFileId": {
            "type": "string",
            "description": "A model _file_ which a principal may or may not have access to. In\n practice, this likely matches the model itself."
          },
          "fineTuneJobId": {
            "type": "string",
            "description": "A job, in the sense of an async/worker job. Ex: a user may be able to see\n a fine tune job but not edit/cancel it."
          },
          "operationId": {
            "type": "string",
            "description": "An operation. Ex: a user may be able to see datasets without their full\n lineage (as operations)."
          },
          "targetPrincipal": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Principal"
          },
          "isWildcard": {
            "type": "boolean",
            "description": "When true, this flag dictates that the Subject represents the entire\n resource type. The `id` field must also be a literal \"*\" or else we should\n fail validation, to avoid magic strings or unexpected auth configurations.\n A wildcard subject is especially important for creating new resources of a\n type (CREATE), and listing (LIST), since in each case there is no existing\n ID to base authorization on."
          }
        },
        "required": [
          "datasetId",
          "modelId",
          "modelFileId",
          "fineTuneJobId",
          "operationId",
          "targetPrincipal",
          "isWildcard"
        ],
        "description": "A Subject is an entity to which access can be granted, such as a dataset."
      },
      "lmai.proto.model_fine_tuning.v1.Predicate": {
        "title": "Predicate",
        "type": "object",
        "properties": {
          "principal": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Principal"
          },
          "subject": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Subject"
          },
          "scope": {
            "type": "string"
          }
        },
        "required": ["principal", "subject", "scope"],
        "description": "A Predicate is either a statement or a query of authorization - when a\n Principal, Subject, and Scope are specified, it has a positive or negative\n answer. For example, \"can user 4 access resource 9 to write?\" or something\n like \"user_4:resource_9:write\". When the Principal is omitted, it is a\n Clause, and can be used to specify an authorization constraint on a resource.\n For example, simply \"resource_9:write\", tagging a concrete action with its\n authorization requirements. When the Subject is itself a Principal, the\n Predicate expresses a relation between the Principals. For example, an owner\n user 11 might have write access to a basic user 3, or write access to a whole\n org. Importantly, the target (subject, scope) must have authorization not\n greater than the principal, since the predicate enables \"impersonation\". So,\n an organization should typically not be authorized to act as an individual\n user this way, since it would confer the same authorization to every member."
      },
      "lmai.proto.model_fine_tuning.v1.Clause": {
        "title": "Clause",
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Subject"
          },
          "scope": {
            "type": "string"
          }
        },
        "required": ["subject", "scope"],
        "description": "A Clause is a Predicate not bound to a Principal, specifying a requirement\n for authorization. Example: \"dataset_5:write\" might represent the \"write\"\n scope on a resource \"dataset_5\""
      },
      "lmai.proto.model_fine_tuning.v1.Policy": {
        "title": "Policy",
        "type": "object",
        "properties": {
          "clauses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Clause"
            }
          }
        },
        "required": ["clauses"]
      },
      "lmai.proto.model_fine_tuning.v1.ChatMessage": {
        "title": "ChatMessage",
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Role can be 'system', 'user', or 'assistant'."
          },
          "content": {
            "type": "string",
            "description": "The content of the message."
          }
        },
        "required": ["role", "content"],
        "description": "Represents a message from the user or the assistant."
      },
      "lmai.proto.model_fine_tuning.v1.ChatCompletionRequest": {
        "title": "ChatCompletionRequest",
        "type": "object",
        "properties": {
          "vendor": {
            "type": "string"
          },
          "model": {
            "type": "string",
            "description": "The ID of the model to use for the completion."
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.ChatMessage"
            },
            "description": "The list of messages in the conversation so far."
          },
          "maxTokens": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "The maximum number of tokens to generate."
          },
          "temperature": {
            "type": "number",
            "description": "The temperature to use for the completion."
          },
          "topP": {
            "type": "number",
            "description": "The top_p value to use for the completion."
          }
        },
        "required": [
          "vendor",
          "model",
          "messages",
          "maxTokens",
          "temperature",
          "topP"
        ],
        "description": "The list of messages in the conversation so far."
      },
      "lmai.proto.model_fine_tuning.v1.PromptTemplate": {
        "title": "PromptTemplate",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "template": {
            "type": "string",
            "description": "The template string that defines the prompt"
          }
        },
        "required": ["id", "template"]
      },
      "lmai.proto.model_fine_tuning.v1.DataColumn": {
        "title": "DataColumn",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "sourceOperationId": {
            "type": "string"
          }
        },
        "required": ["name", "type", "sourceOperationId"]
      },
      "lmai.proto.model_fine_tuning.v1.Dataset": {
        "title": "Dataset",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the dataset."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the dataset, if one exists."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the dataset, if one exists."
          },
          "ownerUserId": {
            "type": "string",
            "description": "The ID of the user who owns the dataset."
          },
          "numRows": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "numCols": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "initializationStatus": {
            "type": "string"
          },
          "initializationError": {
            "type": "string"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetColumnInfo"
            },
            "description": "The columns present in the latest DatasetFile for this dataset"
          },
          "labelState": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetLabelState"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "ownerUserId",
          "numRows",
          "numCols",
          "initializationStatus",
          "columns"
        ],
        "description": "The columns present in the latest DatasetFile for this dataset"
      },
      "lmai.proto.model_fine_tuning.v1.DatasetFileInfo": {
        "title": "DatasetFileInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the dataset file."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "datasetId": {
            "type": "string",
            "description": "The ID of the corresponding dataset."
          },
          "contentMd5Hash": {
            "type": "string"
          },
          "fileSizeBytes": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "numRows": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "numCols": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetColumnInfo"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "datasetId",
          "contentMd5Hash",
          "fileSizeBytes",
          "numRows",
          "numCols",
          "columns"
        ]
      },
      "lmai.proto.model_fine_tuning.v1.DatasetColumnInfo": {
        "title": "DatasetColumnInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the dataset file."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "index": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "description": "Index of the column within the dataset file."
          },
          "literalName": {
            "type": "string",
            "description": "The literal name for the column."
          },
          "dtype": {
            "type": "string"
          }
        },
        "required": ["id", "createdAt", "updatedAt", "index", "literalName"]
      },
      "lmai.proto.model_fine_tuning.v1.DatasetView": {
        "title": "DatasetView",
        "type": "object",
        "properties": {
          "numRows": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "numCols": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DataRow"
            }
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetColumnInfo"
            }
          }
        },
        "required": ["numRows", "numCols", "data", "columns"]
      },
      "lmai.proto.model_fine_tuning.v1.DataRow": {
        "title": "DataRow",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rowValues": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            },
            "description": "Ordered row values with length always equal to `num_rows` on the\n corresponding view."
          }
        },
        "required": ["id", "rowValues"],
        "description": "Ordered row values with length always equal to `num_rows` on the\n corresponding view."
      },
      "lmai.proto.model_fine_tuning.v1.DatasetLabelState": {
        "title": "DatasetLabelState",
        "type": "object",
        "properties": {
          "labelingStatus": {
            "type": "string",
            "description": "The status of the latest general pseudo-labeling job for the dataset"
          },
          "promptTemplate": {
            "type": "string",
            "description": "aka user general instructions"
          },
          "error": {
            "type": "string",
            "description": "if the labeling status is error, this field may contain an error message"
          }
        },
        "required": ["labelingStatus", "promptTemplate"]
      },
      "lmai.proto.model_fine_tuning.v1.FineTuneJob": {
        "title": "FineTuneJob",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the fine tune job."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name corresponding to the fine tuned model derived from this job"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJobConfig"
          },
          "result": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJobResult"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "status",
          "config",
          "result"
        ]
      },
      "lmai.proto.model_fine_tuning.v1.FineTuneJobConfig": {
        "title": "FineTuneJobConfig",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional name for the job."
          },
          "description": {
            "type": "string",
            "description": "Optional description for the job."
          },
          "baselineModelId": {
            "type": "string",
            "description": "The ID for the model used as the starting point for training."
          },
          "trainDatasetId": {
            "type": "string",
            "description": "The dataset to use for training, with splits baked in or to be\n derived dynamically"
          },
          "testDatasetId": {
            "type": "string",
            "description": "The dataset to use for an unbiased evaluation of the model"
          },
          "selectedColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Set of columns to be used in fine-tuning.\n Supported columns: input, output, ground_truth\n For example, a task similar to summarization might need output and\n ground_truth."
          }
        },
        "required": [
          "baselineModelId",
          "trainDatasetId",
          "testDatasetId",
          "selectedColumns"
        ],
        "description": "Set of columns to be used in fine-tuning.\n Supported columns: input, output, ground_truth\n For example, a task similar to summarization might need output and\n ground_truth."
      },
      "lmai.proto.model_fine_tuning.v1.FineTuneJobResult": {
        "title": "FineTuneJobResult",
        "type": "object",
        "properties": {
          "progress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.TrainingProgress"
            },
            "description": "Sequential snapshots of training metrics."
          },
          "trainedModelFile": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.ModelFile"
          },
          "resultUrl": {
            "type": "string",
            "description": "Url to view the full results and progress (e.g. external W&B url)"
          }
        },
        "required": ["progress"],
        "description": "Sequential snapshots of training metrics."
      },
      "lmai.proto.webserver.v2.CreateDatasetRequest": {
        "title": "CreateDatasetRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for the dataset, if one exists."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the dataset, if one exists."
          },
          "isFewShotExamples": {
            "type": "boolean",
            "description": "PseudoLabel job fields."
          },
          "isActiveLabels": {
            "type": "boolean"
          }
        },
        "description": "Create a Dataset, initially an empty shell until a file is uploaded"
      },
      "lmai.proto.webserver.v2.CreateDatasetResponse": {
        "title": "CreateDatasetResponse",
        "type": "object",
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Dataset"
          }
        },
        "required": ["dataset"]
      },
      "lmai.proto.webserver.v2.UploadDatasetFileRequest": {
        "title": "UploadDatasetFileRequest",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "The ID of the dataset corresponding to the file."
          }
        },
        "required": ["datasetId"],
        "description": "Initiate an upload by requesting a pre-signed S3 upload URL."
      },
      "lmai.proto.webserver.v2.UploadDatasetFileResponse": {
        "title": "UploadDatasetFileResponse",
        "type": "object",
        "properties": {
          "s3PresignedPost": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.S3PresignedPost"
          }
        },
        "required": ["s3PresignedPost"]
      },
      "lmai.proto.webserver.v2.S3PresignedPost": {
        "title": "S3PresignedPost",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.webserver.v2.S3PresignedPost.FieldsEntry"
            },
            "description": "Fields required for the S3 presigned POST request generated by s3 sdk."
          }
        },
        "required": ["url", "fields"],
        "description": "Fields required for the S3 presigned POST request generated by s3 sdk."
      },
      "lmai.proto.webserver.v2.S3PresignedPost.FieldsEntry": {
        "title": "FieldsEntry",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["key", "value"]
      },
      "lmai.proto.webserver.v2.FinalizeSingleDatasetFileUploadRequest": {
        "title": "FinalizeSingleDatasetFileUploadRequest",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "The ID of the dataset corresponding to the file"
          },
          "s3PresignedPost": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.S3PresignedPost"
          }
        },
        "required": ["datasetId", "s3PresignedPost"],
        "description": "Request to finalize a single dataset file upload"
      },
      "lmai.proto.webserver.v2.FinalizeSingleDatasetFileUploadResponse": {
        "title": "FinalizeSingleDatasetFileUploadResponse",
        "type": "object",
        "properties": {
          "datasetFile": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetFileInfo"
          }
        },
        "description": "Response after finalizing a single dataset file upload"
      },
      "lmai.proto.webserver.v2.GetDatasetRequest": {
        "title": "GetDatasetRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": ["id"]
      },
      "lmai.proto.webserver.v2.GetDatasetResponse": {
        "title": "GetDatasetResponse",
        "type": "object",
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Dataset"
          }
        },
        "required": ["dataset"]
      },
      "lmai.proto.webserver.v2.GetDatasetViewRequest": {
        "title": "GetDatasetViewRequest",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string",
            "description": "The ID of the dataset from which to retrieve content. When specified,\n gets data from the current file in the dataset."
          },
          "datasetFileId": {
            "type": "string",
            "description": "The ID of the (pinned) dataset file from which to retrieve content.\n Requests iterating over pages of results are recommended to use this\n pinned identifier after the first page in order to prevent any effects\n from a dataset changing between the queries."
          },
          "after": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "Pagination: The index, by row-order, after which to query results."
          },
          "limit": {
            "type": "integer",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "description": "Pagination: The maximum number of results to return on this page."
          }
        },
        "required": ["datasetId", "datasetFileId"],
        "description": "Get a view of the data within a dataset."
      },
      "lmai.proto.webserver.v2.GetDatasetViewResponse": {
        "title": "GetDatasetViewResponse",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          },
          "datasetFileId": {
            "type": "string"
          },
          "datasetView": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.DatasetView"
          }
        },
        "required": ["datasetId", "datasetFileId", "datasetView"]
      },
      "lmai.proto.webserver.v2.ListDatasetsRequestFilters": {
        "title": "ListDatasetsRequestFilters",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "search query substring match for name and description"
          }
        }
      },
      "lmai.proto.webserver.v2.ListDatasetsRequest": {
        "title": "ListDatasetsRequest",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListDatasetsRequestFilters"
          }
        }
      },
      "lmai.proto.webserver.v2.ListDatasetsResponse": {
        "title": "ListDatasetsResponse",
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Dataset"
            }
          },
          "totalCount": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "description": "Total count of datasets which can be listed with applicable\n filters, regardless of page size"
          }
        },
        "required": ["datasets", "totalCount"]
      },
      "lmai.proto.webserver.v2.RefineLabelsRequest": {
        "title": "RefineLabelsRequest",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          }
        },
        "required": ["datasetId"],
        "description": "TODO(ankush): Active labeling flow"
      },
      "lmai.proto.webserver.v2.RefineLabelsResponse": {
        "title": "RefineLabelsResponse",
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "x-stainless-empty-object": true
      },
      "lmai.proto.webserver.v2.GetDatasetDownloadURLRequest": {
        "title": "GetDatasetDownloadURLRequest",
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          }
        },
        "required": ["datasetId"]
      },
      "lmai.proto.webserver.v2.GetDatasetDownloadURLResponse": {
        "title": "GetDatasetDownloadURLResponse",
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "description": "The S3 presigned URL to download the dataset file."
          }
        },
        "required": ["downloadUrl"]
      },
      "lmai.proto.webserver.v2.Metric": {
        "title": "Metric",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deploymentStatus": {
            "type": "string"
          }
        }
      },
      "lmai.proto.webserver.v2.EvaluateRequest": {
        "title": "EvaluateRequest",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          },
          "input": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "output": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "groundTruth": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["metric", "input", "output", "groundTruth"]
      },
      "lmai.proto.webserver.v2.EvaluateResponse": {
        "title": "EvaluateResponse",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": ["metric", "scores"]
      },
      "lmai.proto.webserver.v2.EvaluateDatasetRequest": {
        "title": "EvaluateDatasetRequest",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          },
          "datasetId": {
            "type": "string"
          }
        },
        "required": ["metric", "datasetId"]
      },
      "lmai.proto.webserver.v2.EvaluateDatasetResponse": {
        "title": "EvaluateDatasetResponse",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": ["metric", "scores"]
      },
      "lmai.proto.webserver.v2.ListMetricsRequest": {
        "title": "ListMetricsRequest",
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "x-stainless-empty-object": true
      },
      "lmai.proto.webserver.v2.ListMetricsResponse": {
        "title": "ListMetricsResponse",
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
            }
          }
        },
        "required": ["metrics"]
      },
      "lmai.proto.webserver.v2.GetMetricRequest": {
        "title": "GetMetricRequest",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          }
        },
        "required": ["metric"],
        "description": "Requested metric must have at least id or name set."
      },
      "lmai.proto.webserver.v2.GetMetricResponse": {
        "title": "GetMetricResponse",
        "type": "object",
        "properties": {
          "metric": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.Metric"
          }
        },
        "required": ["metric"],
        "description": "Returns a full metric object with all fields set."
      },
      "lmai.proto.webserver.v2.CreateFineTuneJobRequest": {
        "title": "CreateFineTuneJobRequest",
        "type": "object",
        "properties": {
          "fineTuneJobConfig": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJobConfig"
          }
        },
        "required": ["fineTuneJobConfig"],
        "description": "Create a new Fine Tune Job\n Initialized with the provided configuration parameters."
      },
      "lmai.proto.webserver.v2.CreateFineTuneJobResponse": {
        "title": "CreateFineTuneJobResponse",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.SubmitFineTuneJobRequest": {
        "title": "SubmitFineTuneJobRequest",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "fineTuneJobConfig": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJobConfig"
          }
        },
        "required": ["jobId", "fineTuneJobConfig"]
      },
      "lmai.proto.webserver.v2.SubmitFineTuneJobResponse": {
        "title": "SubmitFineTuneJobResponse",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.GetFineTuneJobStatusRequest": {
        "title": "GetFineTuneJobStatusRequest",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.GetFineTuneJobStatusResponse": {
        "title": "GetFineTuneJobStatusResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "fineTuneJobResult": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJobResult"
          }
        },
        "required": ["status", "fineTuneJobResult"]
      },
      "lmai.proto.webserver.v2.ListFineTuneJobsRequestFilters": {
        "title": "ListFineTuneJobsRequestFilters",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "search query substring match for name and description"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "lmai.proto.webserver.v2.ListFineTuneJobsRequest": {
        "title": "ListFineTuneJobsRequest",
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.ListFineTuneJobsRequestFilters"
          }
        }
      },
      "lmai.proto.webserver.v2.ListFineTuneJobsResponse": {
        "title": "ListFineTuneJobsResponse",
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.FineTuneJob"
            }
          },
          "totalCount": {
            "type": "integer",
            "minimum": -9223372036854775808,
            "maximum": 9223372036854775807,
            "description": "Total count of fine tune jobs which can be listed with applicable\n filters, regardless of page size"
          }
        },
        "required": ["jobs", "totalCount"]
      },
      "lmai.proto.webserver.v2.ListBaseModelsRequest": {
        "title": "ListBaseModelsRequest",
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "x-stainless-empty-object": true
      },
      "lmai.proto.webserver.v2.ListBaseModelsResponse": {
        "title": "ListBaseModelsResponse",
        "type": "object",
        "properties": {
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.Model"
            }
          }
        },
        "required": ["models"]
      },
      "lmai.proto.webserver.v2.PseudoLabelJobConfig": {
        "title": "PseudoLabelJobConfig",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional name for the job."
          },
          "description": {
            "type": "string",
            "description": "Optional description for the job."
          },
          "datasetId": {
            "type": "string",
            "description": "ID of the main dataset to be pseudo-labeled"
          },
          "fewShotDatasetId": {
            "type": "string",
            "description": "ID of the dataset containing few-shot examples. Optional."
          },
          "activeLabeledDatasetId": {
            "type": "string",
            "description": "ID of the actively labeled dataset. Optional. If null, this job is for\n active learning."
          },
          "selectedColumns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Subset of columns to be used in pseudo-labeling.\n Expected columns: input, output, ground_truth\n For example, a summarization task might not need an input column.\n TODO: Should this be repeated EvaluationMetricParameter enum?"
          },
          "chatCompletionConfig": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.ChatCompletionRequest"
          },
          "promptTemplate": {
            "$ref": "#/components/schemas/lmai.proto.model_fine_tuning.v1.PromptTemplate"
          },
          "baseEvaluationMetric": {
            "type": "string",
            "description": "TODO: @Ankush flesh out default prompt templates or \"Base Metric\"\n representation of prompt lmai.proto.model_fine_tuning.v1.templates."
          },
          "skipActiveLabeling": {
            "type": "boolean",
            "description": "If true, skip active labeling, which involves an intermediate Dataset\n created for human labeling."
          }
        },
        "required": [
          "datasetId",
          "selectedColumns",
          "chatCompletionConfig",
          "promptTemplate",
          "baseEvaluationMetric",
          "skipActiveLabeling"
        ],
        "description": "Subset of columns to be used in pseudo-labeling.\n Expected columns: input, output, ground_truth\n For example, a summarization task might not need an input column.\n TODO: Should this be repeated EvaluationMetricParameter enum?"
      },
      "lmai.proto.webserver.v2.CreatePseudoLabelJobRequest": {
        "title": "CreatePseudoLabelJobRequest",
        "type": "object",
        "properties": {
          "pseudoLabelJobConfig": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.PseudoLabelJobConfig"
          }
        },
        "required": ["pseudoLabelJobConfig"]
      },
      "lmai.proto.webserver.v2.CreatePseudoLabelJobResponse": {
        "title": "CreatePseudoLabelJobResponse",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.SubmitPseudoLabelJobRequest": {
        "title": "SubmitPseudoLabelJobRequest",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "pseudoLabelJobConfig": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.PseudoLabelJobConfig"
          }
        },
        "required": ["jobId", "pseudoLabelJobConfig"]
      },
      "lmai.proto.webserver.v2.SubmitPseudoLabelJobResponse": {
        "title": "SubmitPseudoLabelJobResponse",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.GetPseudoLabelJobStatusRequest": {
        "title": "GetPseudoLabelJobStatusRequest",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": ["jobId"]
      },
      "lmai.proto.webserver.v2.GetPseudoLabelJobStatusResponse": {
        "title": "GetPseudoLabelJobStatusResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "pseudoLabelJobResult": {
            "$ref": "#/components/schemas/lmai.proto.webserver.v2.PseudoLabelJobConfig"
          }
        },
        "required": ["status", "pseudoLabelJobResult"]
      },
      "google.protobuf.Value": {
        "type": "object",
        "additionalProperties": true
      }
    },
    "examples": {}
  }
}
